#pragma once

//this could do with a clean up

class perlinNoise {
private:
	int PermutationTable[256] = { 137, 120, 155, 173, 186, 247, 62, 34, 87, 185, 31, 26, 218, 228, 5, 130,
		125, 127, 54, 198, 71, 142, 177, 151, 1, 2, 210, 140, 139, 230, 8, 48, 91, 138, 93, 113, 232, 181,
		205, 75, 153, 238, 206, 195, 190, 159, 187, 108, 154, 47, 18, 234, 42, 171, 52, 81, 97, 92, 196, 45,
		77, 39, 167, 109, 55, 43, 204, 199, 240, 106, 172, 22, 98, 121, 225, 165, 207, 201, 162, 224, 129,
		79, 248, 244, 27, 214, 84, 239, 37, 83, 56, 60, 116, 193, 180, 235, 251, 220, 229, 175, 245, 136, 95,
		158, 16, 112, 24, 14, 124, 231, 211, 152, 157, 7, 40, 88, 145, 128, 237, 222, 191, 164, 28, 0, 19,
		13, 182, 249, 179, 66, 96, 51, 53, 243, 213, 36, 203, 134, 104, 143, 10, 131, 156, 163, 246, 4, 135,
		149, 17, 3, 183, 111, 189, 168, 35, 105, 176, 57, 208, 68, 188, 146, 174, 133, 126, 76, 200, 160, 73,
		103, 70, 6, 102, 115, 20, 61, 89, 219, 9, 72, 119, 217, 147, 32, 123, 69, 38, 250, 150, 216, 46, 41,
		63, 65, 236, 58, 194, 255, 11, 78, 226, 178, 221, 85, 117, 44, 101, 169, 223, 25, 209, 49, 170, 166,
		161, 50, 82, 144, 29, 184, 30, 90, 233, 107, 227, 110, 64, 215, 132, 212, 148, 254, 241, 122, 12, 242,
		99, 202, 74, 114, 15, 253, 141, 252, 80, 67, 100, 23, 33, 197, 86, 94, 192, 21, 118, 59 };

	int Vectors[8][2] = { {0, 1},
						{1, 1},
						{1, 0},
						{1, -1},
						{0, -1},
						{-1, -1},
						{-1, 0},
						{-1, 1} };

	//rounds a float down to an integer
	int floor(double x);

	//linear interpolation between two points by the value of t
	double mix(double x, double y, double t);

	//turns a value from 0-1 from linear to bezier
	double fadeFunction(double x);

	//finds the dot product between two vectors
	double dotProduct(int x1, int y1, double x2, double y2);



public:
	//returns the value of the noise at a given coordinate
	double getValue(double x, double y);
};
